x-common-env: &service_env
  PRIVATE_KEY: ${PRIVATE_KEY}
  BASE_RPC_URL: ${BASE_RPC_URL}
  BASE_TASK_CONTRACT_ADDRESS: 0xC02234058caEaA9416506eABf6Ef3122fCA939E8
  BASE_CHAIN_ID: 84532

# Do not modify the following parameters unless you need to specify the port
x-service-base: &service_base
  restart: always
  networks:
    - attestor-network

services:
  redis:
    <<: *service_base
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379"

  attestor-node:
    <<: *service_base
    image: primuslabs/attestor-node:latest
    container_name: attestor-node
    depends_on:
      - redis
    ports:
      - "8080"
      - "8081"
      - "8082"
      - "8083"
    environment:
      <<: *service_env
      APP_NAME: attestor-node
      ATTESTOR_ONCHAIN_TOOLKIT_URL: http://attestor-service:8084
      DSTACK_PROVIDER_URL: http://dstack-provider:8085
      REDIS_HOST: redis
      KMS_PROVIDER: DSTACK_KMS
      WAIT_REPORT_RESULT_RECIPIENT: false
      logging.level.xyz.primuslabs: ${BASE_RPC_URL:-INFO}
    volumes:
      - /var/run/dstack.sock:/var/run/dstack.sock

  attestor-service:
    <<: *service_base
    image: primuslabs/attestor-service:latest
    container_name: attestor-service
    depends_on:
      - redis
    ports:
      - "8084"
    environment:
      <<: *service_env
      APP_NAME: attestor-service
      REDIS_HOST: redis

  dstack-provider:
    <<: *service_base
    image: primuslabs/dstack-provider:latest
    container_name: dstack-provider
    ports:
      - "8085"
    volumes:
      - /var/run/dstack.sock:/var/run/dstack.sock

  attestor-proxy:
    <<: *service_base
    image: primuslabs/attestor-proxy:latest
    container_name: attestor-proxy
    ports:
      - "18080:80"
    environment:
      ATTESTOR_SERVICE_HOST: attestor-service
      ATTESTOR_NODE_HOST: attestor-node

networks:
  attestor-network:
    driver: bridge
